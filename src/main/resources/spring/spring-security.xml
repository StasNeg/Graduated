<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <http pattern="/resources/**" security="none"/>


    <http pattern="/rest/**" use-expressions="true" name="restSecurityFilterChain" create-session="stateless">
        <http-basic/>
        <intercept-url pattern="/rest/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/rest/**" access="isAuthenticated()"/>
        <intercept-url pattern="/refrigerators/**" access="isAnonymous()"/>
        <csrf disabled="true"/>
        <!--<custom-filter before="HEADERS_FILTER" ref="myFilter"/>-->
        <custom-filter before="BASIC_AUTH_FILTER" ref="myFilter"/>
        <!--<custom-filter after="BASIC_AUTH_FILTER" ref="myFilter"/>-->
        <!--<custom-filter before="CORS_FILTER" ref="myFilter"/>-->
    </http>

    <beans:bean id="myFilter" class="refrigerators.config.CorsFilter"/>


    <http>
        <intercept-url pattern="/refrigerators/**/" access="isAnonymous()"/>
        <intercept-url pattern="/refrigerators/**/rest/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/refrigerators/**/rest**" access="isAuthenticated()"/>
        <form-login login-page="/rest" default-target-url="/rest"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/"/>
        <csrf disabled="true"/>

    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
        </authentication-provider>
    </authentication-manager>







</beans:beans>